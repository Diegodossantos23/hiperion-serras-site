{"ast":null,"code":"var _jsxFileName = \"/home/diego/Documents/portifolio/hiperion-serras-site/src/components/ContactForm/ContactForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    cpfCnpj: '',\n    product: ''\n  });\n  const [message, setMessage] = useState('');\n  const [errors, setErrors] = useState({\n    email: '',\n    cpfCnpj: ''\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n    if (name === 'email') {\n      setErrors({\n        ...errors,\n        email: validateEmail(value) ? '' : 'Email inválido'\n      });\n    } else if (name === 'cpfCnpj') {\n      setErrors({\n        ...errors,\n        cpfCnpj: validateCPF(value) ? '' : 'CPF inválido'\n      });\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Se houver erros de validação, não enviar o formulário\n      if (errors.email || errors.cpfCnpj) return;\n\n      // Código de envio do formulário...\n\n      setMessage('Formulário enviado com sucesso!');\n      // Limpar o formulário após o envio bem-sucedido\n      setFormData({\n        name: '',\n        email: '',\n        cpfCnpj: '',\n        product: ''\n      });\n    } catch (error) {\n      console.error('Erro ao enviar email:', error);\n      setMessage('Erro ao enviar email');\n    }\n  };\n  const validateEmail = email => {\n    const re = /\\S+@\\S+\\.\\S+/;\n    return re.test(email);\n  };\n  const validateCPF = cpf => {\n    const re = /^[0-9]{11}$/;\n    return re.test(cpf);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 8,\n        mb: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        color: \"#696969\",\n        fontSize: 30,\n        fontWeight: 600,\n        fontFamily: \"Montserrat\",\n        align: \"center\",\n        sx: {\n          mb: 4\n        },\n        children: \"Fa\\xE7a uma cota\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        justifyContent: \"center\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 12,\n          md: 6,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            component: \"form\",\n            onSubmit: handleSubmit,\n            sx: {\n              display: 'flex',\n              flexDirection: 'column'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Nome\",\n              id: \"name\",\n              name: \"name\",\n              value: formData.name,\n              onChange: handleChange,\n              required: true,\n              sx: {\n                mb: 2\n              },\n              InputProps: {\n                sx: {\n                  '&:hover': {\n                    backgroundColor: 'transparent'\n                  },\n                  '&:focus': {\n                    backgroundColor: '#F2BF27'\n                  }\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Email\",\n              id: \"email\",\n              name: \"email\",\n              type: \"email\",\n              value: formData.email,\n              onChange: handleChange,\n              required: true,\n              error: !!errors.email,\n              helperText: errors.email,\n              sx: {\n                mb: 2\n              },\n              InputProps: {\n                sx: {\n                  '&:hover': {\n                    backgroundColor: 'transparent'\n                  },\n                  '&:focus': {\n                    backgroundColor: '#F2BF27'\n                  }\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"CPF/CNPJ\",\n              id: \"cpfCnpj\",\n              name: \"cpfCnpj\",\n              value: formData.cpfCnpj,\n              onChange: handleChange,\n              required: true,\n              error: !!errors.cpfCnpj,\n              helperText: errors.cpfCnpj,\n              sx: {\n                mb: 2\n              },\n              InputProps: {\n                sx: {\n                  '&:hover': {\n                    backgroundColor: 'transparent'\n                  },\n                  '&:focus': {\n                    backgroundColor: '#F2BF27'\n                  }\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Produto\",\n              id: \"product\",\n              name: \"product\",\n              value: formData.product,\n              onChange: handleChange,\n              required: true,\n              sx: {\n                mb: 2\n              },\n              InputProps: {\n                sx: {\n                  '&:hover': {\n                    backgroundColor: 'transparent'\n                  },\n                  '&:focus': {\n                    backgroundColor: '#F2BF27'\n                  }\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              type: \"submit\",\n              sx: {\n                backgroundColor: '#F2BF27',\n                color: '#fff',\n                '&:hover': {\n                  backgroundColor: '#F2BF27'\n                }\n              },\n              children: \"Enviar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), message && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(ContactForm, \"UmuwS8zihoC63mmLhJUbaEiE2wM=\");\n_c = ContactForm;\nexport default ContactForm;\nvar _c;\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["React","useState","TextField","Button","Container","Typography","Box","Grid","jsxDEV","_jsxDEV","ContactForm","_s","formData","setFormData","name","email","cpfCnpj","product","message","setMessage","errors","setErrors","handleChange","e","value","target","validateEmail","validateCPF","handleSubmit","preventDefault","error","console","re","test","cpf","maxWidth","children","sx","mt","mb","variant","color","fontSize","fontWeight","fontFamily","align","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","justifyContent","item","xs","sm","md","component","onSubmit","display","flexDirection","label","id","onChange","required","InputProps","backgroundColor","type","helperText","_c","$RefreshReg$"],"sources":["/home/diego/Documents/portifolio/hiperion-serras-site/src/components/ContactForm/ContactForm.tsx"],"sourcesContent":["import React, { useState, ChangeEvent, FormEvent } from 'react';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\n\nconst ContactForm = () => {\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        cpfCnpj: '',\n        product: ''\n    });\n    const [message, setMessage] = useState('');\n    const [errors, setErrors] = useState({\n        email: '',\n        cpfCnpj: ''\n    });\n\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = e.target;\n        setFormData({ ...formData, [name]: value });\n\n        if (name === 'email') {\n            setErrors({ ...errors, email: validateEmail(value) ? '' : 'Email inválido' });\n        } else if (name === 'cpfCnpj') {\n            setErrors({ ...errors, cpfCnpj: validateCPF(value) ? '' : 'CPF inválido' });\n        }\n    };\n\n    const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        try {\n            // Se houver erros de validação, não enviar o formulário\n            if (errors.email || errors.cpfCnpj) return;\n\n            // Código de envio do formulário...\n\n            setMessage('Formulário enviado com sucesso!');\n            // Limpar o formulário após o envio bem-sucedido\n            setFormData({\n                name: '',\n                email: '',\n                cpfCnpj: '',\n                product: ''\n            });\n        } catch (error) {\n            console.error('Erro ao enviar email:', error);\n            setMessage('Erro ao enviar email');\n        }\n    };\n\n    const validateEmail = (email: string) => {\n        const re = /\\S+@\\S+\\.\\S+/;\n        return re.test(email);\n    };\n\n    const validateCPF = (cpf: string) => {\n        const re = /^[0-9]{11}$/;\n        return re.test(cpf);\n    };\n\n    return (\n        <Container maxWidth=\"md\">\n            <Box sx={{ mt: 8, mb: 8 }}>\n                <Typography variant=\"h4\" color=\"#696969\"  fontSize={30} fontWeight={600} fontFamily=\"Montserrat\" align=\"center\" sx={{ mb: 4 }}>Faça uma cotação</Typography>\n                <Grid container spacing={3} justifyContent=\"center\"> {/* Adicionado justifyContent para centralizar */}\n                    <Grid item xs={12} sm={12} md={6}>\n                        <Box component=\"form\" onSubmit={handleSubmit} sx={{ display: 'flex', flexDirection: 'column' }}>\n                            <TextField\n                                label=\"Nome\"\n                                id=\"name\"\n                                name=\"name\"\n                                value={formData.name}\n                                onChange={handleChange}\n                                required\n                                sx={{ mb: 2 }}\n                                InputProps={{ sx: { '&:hover': { backgroundColor: 'transparent' }, '&:focus': { backgroundColor: '#F2BF27' } } }}\n                            />\n                            <TextField\n                                label=\"Email\"\n                                id=\"email\"\n                                name=\"email\"\n                                type=\"email\"\n                                value={formData.email}\n                                onChange={handleChange}\n                                required\n                                error={!!errors.email}\n                                helperText={errors.email}\n                                sx={{ mb: 2 }}\n                                InputProps={{ sx: { '&:hover': { backgroundColor: 'transparent' }, '&:focus': { backgroundColor: '#F2BF27' } } }}\n                            />\n                            <TextField\n                                label=\"CPF/CNPJ\"\n                                id=\"cpfCnpj\"\n                                name=\"cpfCnpj\"\n                                value={formData.cpfCnpj}\n                                onChange={handleChange}\n                                required\n                                error={!!errors.cpfCnpj}\n                                helperText={errors.cpfCnpj}\n                                sx={{ mb: 2 }}\n                                InputProps={{ sx: { '&:hover': { backgroundColor: 'transparent' }, '&:focus': { backgroundColor: '#F2BF27' } } }}\n                            />\n                            <TextField\n                                label=\"Produto\"\n                                id=\"product\"\n                                name=\"product\"\n                                value={formData.product}\n                                onChange={handleChange}\n                                required\n                                sx={{ mb: 2 }}\n                                InputProps={{ sx: { '&:hover': { backgroundColor: 'transparent' }, '&:focus': { backgroundColor: '#F2BF27' } } }}\n                            />\n                            <Button variant=\"contained\" type=\"submit\" sx={{ backgroundColor: '#F2BF27', color: '#fff', '&:hover': { backgroundColor: '#F2BF27' } }}>Enviar</Button>\n                        </Box>\n                        {message && <Typography variant=\"body1\">{message}</Typography>}\n                    </Grid>\n                </Grid>\n            </Box>\n        </Container>\n    );\n};\n\nexport default ContactForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}